/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WithHeaderRouteImport } from './routes/_with-header'
import { Route as NoHeaderRouteImport } from './routes/_no-header'
import { Route as WithHeaderIndexRouteImport } from './routes/_with-header/index'
import { Route as WithHeaderAboutRouteImport } from './routes/_with-header/about'
import { Route as NoHeaderLoginRouteImport } from './routes/_no-header/login'

const WithHeaderRoute = WithHeaderRouteImport.update({
  id: '/_with-header',
  getParentRoute: () => rootRouteImport,
} as any)
const NoHeaderRoute = NoHeaderRouteImport.update({
  id: '/_no-header',
  getParentRoute: () => rootRouteImport,
} as any)
const WithHeaderIndexRoute = WithHeaderIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WithHeaderRoute,
} as any)
const WithHeaderAboutRoute = WithHeaderAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => WithHeaderRoute,
} as any)
const NoHeaderLoginRoute = NoHeaderLoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => NoHeaderRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof NoHeaderLoginRoute
  '/about': typeof WithHeaderAboutRoute
  '/': typeof WithHeaderIndexRoute
}
export interface FileRoutesByTo {
  '/login': typeof NoHeaderLoginRoute
  '/about': typeof WithHeaderAboutRoute
  '/': typeof WithHeaderIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_no-header': typeof NoHeaderRouteWithChildren
  '/_with-header': typeof WithHeaderRouteWithChildren
  '/_no-header/login': typeof NoHeaderLoginRoute
  '/_with-header/about': typeof WithHeaderAboutRoute
  '/_with-header/': typeof WithHeaderIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/login' | '/about' | '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/login' | '/about' | '/'
  id:
    | '__root__'
    | '/_no-header'
    | '/_with-header'
    | '/_no-header/login'
    | '/_with-header/about'
    | '/_with-header/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  NoHeaderRoute: typeof NoHeaderRouteWithChildren
  WithHeaderRoute: typeof WithHeaderRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_with-header': {
      id: '/_with-header'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WithHeaderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_no-header': {
      id: '/_no-header'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof NoHeaderRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_with-header/': {
      id: '/_with-header/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof WithHeaderIndexRouteImport
      parentRoute: typeof WithHeaderRoute
    }
    '/_with-header/about': {
      id: '/_with-header/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof WithHeaderAboutRouteImport
      parentRoute: typeof WithHeaderRoute
    }
    '/_no-header/login': {
      id: '/_no-header/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof NoHeaderLoginRouteImport
      parentRoute: typeof NoHeaderRoute
    }
  }
}

interface NoHeaderRouteChildren {
  NoHeaderLoginRoute: typeof NoHeaderLoginRoute
}

const NoHeaderRouteChildren: NoHeaderRouteChildren = {
  NoHeaderLoginRoute: NoHeaderLoginRoute,
}

const NoHeaderRouteWithChildren = NoHeaderRoute._addFileChildren(
  NoHeaderRouteChildren,
)

interface WithHeaderRouteChildren {
  WithHeaderAboutRoute: typeof WithHeaderAboutRoute
  WithHeaderIndexRoute: typeof WithHeaderIndexRoute
}

const WithHeaderRouteChildren: WithHeaderRouteChildren = {
  WithHeaderAboutRoute: WithHeaderAboutRoute,
  WithHeaderIndexRoute: WithHeaderIndexRoute,
}

const WithHeaderRouteWithChildren = WithHeaderRoute._addFileChildren(
  WithHeaderRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  NoHeaderRoute: NoHeaderRouteWithChildren,
  WithHeaderRoute: WithHeaderRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
